/**
 * This test file allows to run the basic initiation of the
 * HellowWorld class. It does not, however, simulate full
 * interaction with the node.
 */

var q = require('q');
var Channel = require('../default-units/channel');
var channel = Channel.create({});
var DataLogger = require('../dataLogger');
var dataLogger = DataLogger.create({});

channel.configuration = {
    channel: "ETGD0018",
    name: "Bondi Beach Sth Park",
};
channel.publishEvent = function (event, data) {
    console.log("Event", event);
};
channel.publishStateChange = function () {
    console.log("Channel state published.");
    //console.log(this.getState());
};

channel.publishStateChangeHistory = function (stateChanges){
  console.log(stateChanges);
};

channel.logInfo = function () {
    if (arguments.length == 1) {
        console.log(arguments[0]);
    }
    else {
        console.log(arguments);
    }
}
channel.logDebug = function () {
    channel.logInfo(arguments);
}
channel.logError = function () {
    channel.logInfo(arguments);
}

dataLogger.configuration = {
    name: "TESTDATALOGGER",
    type: "microSpider2 Environmental",
    server: "imap.gmail.com",
    username: "halytech.thingit.integration@gmail.com",
    password: "Br00klyn",
    subject: "Automatic Report",
    locationID: "StAloyWilby_FD_",
    timeZone: "Australia/Sydney",
    interval: "2",
};
dataLogger.publishEvent = function (event, data) {
    console.log("Event", event);
};
dataLogger.publishStateChange = function () {
    console.log("Device state published.");
    //console.log(this.getState());
};

dataLogger.publishStateChangeHistory = function (stateChanges){
    console.log(stateChanges);
};

dataLogger.logInfo = function () {
    if (arguments.length == 1) {
        console.log(arguments[0]);
    }
    else {
        console.log(arguments);
    }
}
dataLogger.logDebug = function () {
    dataLogger.logInfo(arguments);
}
dataLogger.logError = function () {
    dataLogger.logInfo(arguments);
}

channel.isSimulated = function () {
    return false;
};

dataLogger.isSimulated = function () {
    return channel.isSimulated();
};

console.log("About to start");
dataLogger.actors = [];
dataLogger.actors.push(channel);
channel.device = dataLogger;
channel.start();
dataLogger.start();

/*
var date = new Date('4-Oct-16 7:20:00Z');
var dateString = date.toISOString();
dateString = dateString.substr(0, dateString.length-1);
var moment = require('moment-timezone');
var anotherDate = moment.tz(dateString, dataLogger.configuration.timeZone);
console.log(new Date(anotherDate.format()));
*/
