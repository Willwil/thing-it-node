/**
 * This test file allows to run the basic initiation of the
 * HellowWorld class. It does not, however, simulate full
 * interaction with the node.
 */

var FOSCAM = require('../camera');

var foscam = FOSCAM.create({});

foscam.isSimulated = function () {
    return false;
};
foscam.configuration = {
    host: "192.168.0.15",
    port: "80",
    user: "admin",
    password: "",
    simulated: false,
    updateTime: 2000,
    hlsLiveStreaming: false,
    webMLiveStreaming: false,
    webMPort: 3002
};

foscam.node = {
    options: {dataDirectory: "/Users/Klaus/tin/data"}, isSimulated: function () {
        return false
    }
};
foscam.id = "test01234567890";

foscam.isSimulated = function () {
    return foscam.configuration.simulated;
}

foscam.publishEvent = function (event, data) {
    console.log("Event", event);
};
foscam.publishStateChange = function () {
    //console.log("State Change", this.getState());
    console.log("State Change");
};
foscam.logInfo = function () {
    if (arguments.length == 1) {
        console.log(arguments[0]);
    }
    else {
        console.log(arguments);
    }
}
foscam.logDebug = function () {
    foscam.logInfo(arguments);
}
foscam.logError = function () {
    foscam.logInfo(arguments);
}

console.log("About to start.");
foscam.start()
    .then(function () {
        return foscam.savePosition();
    })
    .delay(1000)
    .then(function () {
        return foscam.panLeft();
    })
    .delay(1000)
    .then(function () {
        return foscam.panRight()
    })
    .delay(1000)
    .then(function () {
        return foscam.tiltUp()
    })
    .delay(1000)
    .then(function () {
        return foscam.tiltDown()
    })
    .delay(1000)
    .then(function () {
        return foscam.tiltDown()
    })
    .delay(1000)
    .then(function () {
        return foscam.tiltDown()
    })
    .delay(1000)
    .then(function () {
        return foscam.restorePosition();
    });

/*
 setTimeout(function () {
 foscam.panLeft()
 .delay(1000)
 .then(function () {
 return foscam.panRight()
 })
 .delay(1000)
 .then(function () {
 return foscam.tiltUp()
 })
 .delay(1000)
 .then(function () {
 return foscam.tiltDown()
 })
 }, 5000);
 */

foscamStatus = {
    id: 'C4D6552E4786',
    sys_ver: '11.37.2.65',
    app_ver: '2.0.10.15',
    alias: 'foscam',
    now: '1483119787',
    tz: '28800',
    alarm_status: '0',
    ddns_status: '0',
    ddns_host: 'cv3441.myfoscam.org',
    oray_type: '0',
    upnp_status: '0',
    p2p_status: '0',
    p2p_local_port: '28216',
    msn_status: '0',
    wifi_status: '0',
    ppcn: '0',
    temperature: '0.0',
    humidity: '0',
    tridro_error: ''
}
